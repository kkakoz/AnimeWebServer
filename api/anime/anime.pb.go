// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/anime/anime.proto

package animepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddCategoryReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddCategoryReq) Reset()         { *m = AddCategoryReq{} }
func (m *AddCategoryReq) String() string { return proto.CompactTextString(m) }
func (*AddCategoryReq) ProtoMessage()    {}
func (*AddCategoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_50515442878eeef0, []int{0}
}

func (m *AddCategoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCategoryReq.Unmarshal(m, b)
}
func (m *AddCategoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCategoryReq.Marshal(b, m, deterministic)
}
func (m *AddCategoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCategoryReq.Merge(m, src)
}
func (m *AddCategoryReq) XXX_Size() int {
	return xxx_messageInfo_AddCategoryReq.Size(m)
}
func (m *AddCategoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCategoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddCategoryReq proto.InternalMessageInfo

func (m *AddCategoryReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CategoryListRes struct {
	CategoryList         []*Category `protobuf:"bytes,1,rep,name=categoryList,proto3" json:"categoryList,omitempty"`
	Count                int64       `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CategoryListRes) Reset()         { *m = CategoryListRes{} }
func (m *CategoryListRes) String() string { return proto.CompactTextString(m) }
func (*CategoryListRes) ProtoMessage()    {}
func (*CategoryListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_50515442878eeef0, []int{1}
}

func (m *CategoryListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryListRes.Unmarshal(m, b)
}
func (m *CategoryListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryListRes.Marshal(b, m, deterministic)
}
func (m *CategoryListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryListRes.Merge(m, src)
}
func (m *CategoryListRes) XXX_Size() int {
	return xxx_messageInfo_CategoryListRes.Size(m)
}
func (m *CategoryListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryListRes.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryListRes proto.InternalMessageInfo

func (m *CategoryListRes) GetCategoryList() []*Category {
	if m != nil {
		return m.CategoryList
	}
	return nil
}

func (m *CategoryListRes) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Category struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Category) Reset()         { *m = Category{} }
func (m *Category) String() string { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()    {}
func (*Category) Descriptor() ([]byte, []int) {
	return fileDescriptor_50515442878eeef0, []int{2}
}

func (m *Category) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Category.Unmarshal(m, b)
}
func (m *Category) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Category.Marshal(b, m, deterministic)
}
func (m *Category) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Category.Merge(m, src)
}
func (m *Category) XXX_Size() int {
	return xxx_messageInfo_Category.Size(m)
}
func (m *Category) XXX_DiscardUnknown() {
	xxx_messageInfo_Category.DiscardUnknown(m)
}

var xxx_messageInfo_Category proto.InternalMessageInfo

func (m *Category) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Category) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AddAnimeReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Year                 int32    `protobuf:"varint,3,opt,name=year,proto3" json:"year,omitempty"`
	Quarter              int32    `protobuf:"varint,4,opt,name=quarter,proto3" json:"quarter,omitempty"`
	CategoryId           []int64  `protobuf:"varint,5,rep,packed,name=categoryId,proto3" json:"categoryId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddAnimeReq) Reset()         { *m = AddAnimeReq{} }
func (m *AddAnimeReq) String() string { return proto.CompactTextString(m) }
func (*AddAnimeReq) ProtoMessage()    {}
func (*AddAnimeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_50515442878eeef0, []int{3}
}

func (m *AddAnimeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAnimeReq.Unmarshal(m, b)
}
func (m *AddAnimeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAnimeReq.Marshal(b, m, deterministic)
}
func (m *AddAnimeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAnimeReq.Merge(m, src)
}
func (m *AddAnimeReq) XXX_Size() int {
	return xxx_messageInfo_AddAnimeReq.Size(m)
}
func (m *AddAnimeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAnimeReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddAnimeReq proto.InternalMessageInfo

func (m *AddAnimeReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddAnimeReq) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AddAnimeReq) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *AddAnimeReq) GetQuarter() int32 {
	if m != nil {
		return m.Quarter
	}
	return 0
}

func (m *AddAnimeReq) GetCategoryId() []int64 {
	if m != nil {
		return m.CategoryId
	}
	return nil
}

type AddVideoReq struct {
	Episode              int32    `protobuf:"varint,1,opt,name=episode,proto3" json:"episode,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddVideoReq) Reset()         { *m = AddVideoReq{} }
func (m *AddVideoReq) String() string { return proto.CompactTextString(m) }
func (*AddVideoReq) ProtoMessage()    {}
func (*AddVideoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_50515442878eeef0, []int{4}
}

func (m *AddVideoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddVideoReq.Unmarshal(m, b)
}
func (m *AddVideoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddVideoReq.Marshal(b, m, deterministic)
}
func (m *AddVideoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddVideoReq.Merge(m, src)
}
func (m *AddVideoReq) XXX_Size() int {
	return xxx_messageInfo_AddVideoReq.Size(m)
}
func (m *AddVideoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddVideoReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddVideoReq proto.InternalMessageInfo

func (m *AddVideoReq) GetEpisode() int32 {
	if m != nil {
		return m.Episode
	}
	return 0
}

func (m *AddVideoReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddVideoReq) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type GetAnimeListReq struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Type                 int32    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Sort                 int32    `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAnimeListReq) Reset()         { *m = GetAnimeListReq{} }
func (m *GetAnimeListReq) String() string { return proto.CompactTextString(m) }
func (*GetAnimeListReq) ProtoMessage()    {}
func (*GetAnimeListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_50515442878eeef0, []int{5}
}

func (m *GetAnimeListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAnimeListReq.Unmarshal(m, b)
}
func (m *GetAnimeListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAnimeListReq.Marshal(b, m, deterministic)
}
func (m *GetAnimeListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAnimeListReq.Merge(m, src)
}
func (m *GetAnimeListReq) XXX_Size() int {
	return xxx_messageInfo_GetAnimeListReq.Size(m)
}
func (m *GetAnimeListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAnimeListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAnimeListReq proto.InternalMessageInfo

func (m *GetAnimeListReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAnimeListReq) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetAnimeListReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GetAnimeListReq) GetSort() int32 {
	if m != nil {
		return m.Sort
	}
	return 0
}

type AnimeListRes struct {
	Animeinfo            []*AnimeRes `protobuf:"bytes,1,rep,name=animeinfo,proto3" json:"animeinfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AnimeListRes) Reset()         { *m = AnimeListRes{} }
func (m *AnimeListRes) String() string { return proto.CompactTextString(m) }
func (*AnimeListRes) ProtoMessage()    {}
func (*AnimeListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_50515442878eeef0, []int{6}
}

func (m *AnimeListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnimeListRes.Unmarshal(m, b)
}
func (m *AnimeListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnimeListRes.Marshal(b, m, deterministic)
}
func (m *AnimeListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnimeListRes.Merge(m, src)
}
func (m *AnimeListRes) XXX_Size() int {
	return xxx_messageInfo_AnimeListRes.Size(m)
}
func (m *AnimeListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AnimeListRes.DiscardUnknown(m)
}

var xxx_messageInfo_AnimeListRes proto.InternalMessageInfo

func (m *AnimeListRes) GetAnimeinfo() []*AnimeRes {
	if m != nil {
		return m.Animeinfo
	}
	return nil
}

type AnimeRes struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ImageUrl             string   `protobuf:"bytes,4,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	Year                 int32    `protobuf:"varint,5,opt,name=year,proto3" json:"year,omitempty"`
	Quarter              int32    `protobuf:"varint,6,opt,name=quarter,proto3" json:"quarter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnimeRes) Reset()         { *m = AnimeRes{} }
func (m *AnimeRes) String() string { return proto.CompactTextString(m) }
func (*AnimeRes) ProtoMessage()    {}
func (*AnimeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_50515442878eeef0, []int{7}
}

func (m *AnimeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnimeRes.Unmarshal(m, b)
}
func (m *AnimeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnimeRes.Marshal(b, m, deterministic)
}
func (m *AnimeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnimeRes.Merge(m, src)
}
func (m *AnimeRes) XXX_Size() int {
	return xxx_messageInfo_AnimeRes.Size(m)
}
func (m *AnimeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AnimeRes.DiscardUnknown(m)
}

var xxx_messageInfo_AnimeRes proto.InternalMessageInfo

func (m *AnimeRes) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AnimeRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AnimeRes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AnimeRes) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *AnimeRes) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *AnimeRes) GetQuarter() int32 {
	if m != nil {
		return m.Quarter
	}
	return 0
}

type VideoInfo struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Episode              int32    `protobuf:"varint,2,opt,name=episode,proto3" json:"episode,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Url                  string   `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoInfo) Reset()         { *m = VideoInfo{} }
func (m *VideoInfo) String() string { return proto.CompactTextString(m) }
func (*VideoInfo) ProtoMessage()    {}
func (*VideoInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_50515442878eeef0, []int{8}
}

func (m *VideoInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoInfo.Unmarshal(m, b)
}
func (m *VideoInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoInfo.Marshal(b, m, deterministic)
}
func (m *VideoInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoInfo.Merge(m, src)
}
func (m *VideoInfo) XXX_Size() int {
	return xxx_messageInfo_VideoInfo.Size(m)
}
func (m *VideoInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VideoInfo proto.InternalMessageInfo

func (m *VideoInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *VideoInfo) GetEpisode() int32 {
	if m != nil {
		return m.Episode
	}
	return 0
}

func (m *VideoInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VideoInfo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*AddCategoryReq)(nil), "AddCategoryReq")
	proto.RegisterType((*CategoryListRes)(nil), "CategoryListRes")
	proto.RegisterType((*Category)(nil), "Category")
	proto.RegisterType((*AddAnimeReq)(nil), "AddAnimeReq")
	proto.RegisterType((*AddVideoReq)(nil), "AddVideoReq")
	proto.RegisterType((*GetAnimeListReq)(nil), "GetAnimeListReq")
	proto.RegisterType((*AnimeListRes)(nil), "AnimeListRes")
	proto.RegisterType((*AnimeRes)(nil), "AnimeRes")
	proto.RegisterType((*VideoInfo)(nil), "VideoInfo")
}

func init() { proto.RegisterFile("api/anime/anime.proto", fileDescriptor_50515442878eeef0) }

var fileDescriptor_50515442878eeef0 = []byte{
	// 520 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xdd, 0x8a, 0xd3, 0x40,
	0x14, 0x26, 0x49, 0xb3, 0xdb, 0x9c, 0x96, 0x76, 0x1d, 0x56, 0x09, 0x51, 0x24, 0x0c, 0x82, 0x41,
	0x30, 0x81, 0xf5, 0x42, 0xd0, 0xab, 0x2a, 0x22, 0x8b, 0xeb, 0xcd, 0x2c, 0xee, 0x85, 0x5e, 0xa5,
	0x9d, 0x69, 0x18, 0x68, 0x33, 0xd9, 0xc9, 0x54, 0xa8, 0x97, 0xbe, 0x81, 0x78, 0xe7, 0x1b, 0xf8,
	0x3c, 0xbe, 0x82, 0x0f, 0x22, 0x33, 0xc9, 0x64, 0xd3, 0x6d, 0x17, 0xbc, 0x49, 0xce, 0xcf, 0x9c,
	0x33, 0xdf, 0x37, 0xdf, 0x39, 0x70, 0x3f, 0xaf, 0x78, 0x96, 0x97, 0x7c, 0xcd, 0x9a, 0x6f, 0x5a,
	0x49, 0xa1, 0x44, 0xf4, 0xb0, 0x10, 0xa2, 0x58, 0xb1, 0xcc, 0x78, 0xf3, 0xcd, 0x32, 0x63, 0xeb,
	0x4a, 0x6d, 0xdb, 0xe4, 0xa3, 0x36, 0xd9, 0x94, 0x96, 0x42, 0xe5, 0x8a, 0x8b, 0xb2, 0x6e, 0xb2,
	0xf8, 0x09, 0x4c, 0x66, 0x94, 0xbe, 0xcd, 0x15, 0x2b, 0x84, 0xdc, 0x12, 0x76, 0x8d, 0x10, 0x0c,
	0xca, 0x7c, 0xcd, 0x42, 0x27, 0x76, 0x92, 0x80, 0x18, 0x1b, 0x5f, 0xc1, 0xd4, 0x1e, 0xb9, 0xe0,
	0xb5, 0x22, 0xac, 0x46, 0xcf, 0x61, 0xbc, 0xe8, 0x85, 0x42, 0x27, 0xf6, 0x92, 0xd1, 0x59, 0x90,
	0x76, 0xad, 0x76, 0xd2, 0xe8, 0x14, 0xfc, 0x85, 0xd8, 0x94, 0x2a, 0x74, 0x63, 0x27, 0xf1, 0x48,
	0xe3, 0xe0, 0x14, 0x86, 0xf6, 0x3c, 0x9a, 0x80, 0xcb, 0xa9, 0xb9, 0xd5, 0x23, 0x2e, 0xa7, 0x1d,
	0x0e, 0xb7, 0x87, 0xe3, 0x87, 0x03, 0xa3, 0x19, 0xa5, 0x33, 0xcd, 0xfd, 0x0e, 0xac, 0x28, 0x86,
	0x11, 0x65, 0xf5, 0x42, 0xf2, 0x4a, 0xf3, 0x6c, 0xcb, 0xfb, 0x21, 0x5d, 0xb5, 0x65, 0xb9, 0x0c,
	0xbd, 0xd8, 0x49, 0x7c, 0x62, 0x6c, 0x14, 0xc2, 0xf1, 0xf5, 0x26, 0x97, 0x8a, 0xc9, 0x70, 0x60,
	0xc2, 0xd6, 0x45, 0x8f, 0x01, 0x2c, 0x93, 0x73, 0x1a, 0xfa, 0xb1, 0x97, 0x78, 0xa4, 0x17, 0xc1,
	0x1f, 0x0d, 0xa4, 0x2b, 0x4e, 0x99, 0xd0, 0x90, 0x42, 0x38, 0x66, 0x15, 0xaf, 0x05, 0x6d, 0x50,
	0xf9, 0xc4, 0xba, 0x87, 0x08, 0xa1, 0x13, 0xf0, 0x36, 0x72, 0x65, 0x90, 0x04, 0x44, 0x9b, 0x98,
	0xc3, 0xf4, 0x3d, 0x53, 0x86, 0x61, 0xf3, 0xd4, 0x86, 0x65, 0x95, 0x17, 0xb6, 0x9f, 0xb1, 0x51,
	0x04, 0x43, 0xfd, 0xbf, 0xe4, 0xdf, 0x9a, 0x86, 0x3e, 0xe9, 0x7c, 0x7d, 0x5e, 0x6d, 0x2b, 0x66,
	0xf9, 0x69, 0x5b, 0xc7, 0x6a, 0x21, 0x55, 0x4b, 0xce, 0xd8, 0xf8, 0x25, 0x8c, 0x7b, 0xf7, 0xd4,
	0xe8, 0x29, 0x04, 0x66, 0xaa, 0x78, 0xb9, 0x14, 0x9d, 0x9e, 0xed, 0x5b, 0xd7, 0xe4, 0x26, 0x87,
	0x7f, 0x39, 0x30, 0xb4, 0xf1, 0xff, 0xd1, 0xed, 0xb6, 0x26, 0xde, 0xbe, 0x26, 0x11, 0x0c, 0xf9,
	0x3a, 0x2f, 0xd8, 0x27, 0xb9, 0x32, 0x18, 0x03, 0xd2, 0xf9, 0x9d, 0x5e, 0xfe, 0x61, 0xbd, 0x8e,
	0x76, 0xf4, 0xc2, 0x5f, 0x20, 0x30, 0x62, 0x9c, 0x97, 0x4b, 0xb1, 0x07, 0xae, 0xa7, 0x8e, 0x7b,
	0x58, 0x1d, 0x6f, 0x5f, 0x9d, 0x41, 0xa7, 0xce, 0xd9, 0x6f, 0xa7, 0x7d, 0xb3, 0x4b, 0x26, 0xbf,
	0xf2, 0x05, 0x43, 0x17, 0x46, 0xfd, 0x6e, 0x88, 0xa7, 0xe9, 0xee, 0x36, 0x45, 0x0f, 0xd2, 0x66,
	0xfd, 0x52, 0xbb, 0x9b, 0xe9, 0x3b, 0xbd, 0x9b, 0xf8, 0xf4, 0xfb, 0x9f, 0xbf, 0x3f, 0xdd, 0x09,
	0x0e, 0x32, 0x3b, 0x4a, 0xaf, 0x9c, 0x67, 0xe8, 0x03, 0x8c, 0xfb, 0x7b, 0x86, 0xee, 0xa8, 0x8e,
	0x4e, 0xd2, 0x5b, 0xeb, 0x88, 0xef, 0x99, 0x7e, 0x23, 0x74, 0xd3, 0xef, 0xcd, 0xf8, 0x33, 0xa4,
	0xd9, 0x6b, 0xa3, 0x5a, 0x35, 0x9f, 0x1f, 0x99, 0x16, 0x2f, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff,
	0x78, 0x08, 0xa9, 0x8c, 0x43, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AnimeServiceClient is the client API for AnimeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnimeServiceClient interface {
	AddCategory(ctx context.Context, in *AddCategoryReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CategoryList(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CategoryListRes, error)
}

type animeServiceClient struct {
	cc *grpc.ClientConn
}

func NewAnimeServiceClient(cc *grpc.ClientConn) AnimeServiceClient {
	return &animeServiceClient{cc}
}

func (c *animeServiceClient) AddCategory(ctx context.Context, in *AddCategoryReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/AnimeService/AddCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *animeServiceClient) CategoryList(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CategoryListRes, error) {
	out := new(CategoryListRes)
	err := c.cc.Invoke(ctx, "/AnimeService/CategoryList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnimeServiceServer is the server API for AnimeService service.
type AnimeServiceServer interface {
	AddCategory(context.Context, *AddCategoryReq) (*emptypb.Empty, error)
	CategoryList(context.Context, *emptypb.Empty) (*CategoryListRes, error)
}

func RegisterAnimeServiceServer(s *grpc.Server, srv AnimeServiceServer) {
	s.RegisterService(&_AnimeService_serviceDesc, srv)
}

func _AnimeService_AddCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCategoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnimeServiceServer).AddCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AnimeService/AddCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnimeServiceServer).AddCategory(ctx, req.(*AddCategoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnimeService_CategoryList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnimeServiceServer).CategoryList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AnimeService/CategoryList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnimeServiceServer).CategoryList(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _AnimeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AnimeService",
	HandlerType: (*AnimeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddCategory",
			Handler:    _AnimeService_AddCategory_Handler,
		},
		{
			MethodName: "CategoryList",
			Handler:    _AnimeService_CategoryList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/anime/anime.proto",
}
